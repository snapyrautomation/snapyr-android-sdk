ext {
	// Allows this project (snapyr/build.gradle) to reference the root project (top-level
	// build.gradle in this repo), when being included in another project. This allows for an easier
	// dev flow, e.g. when working on React Native code that uses the Android SDK.
	// To use, the consuming project must add the following to its `settings.gradle`:
	// ```
	// include ':snapyr-root'
	// project(':snapyr-root').projectDir = new File('../path/to/snapyr-android-sdk')
	// include ':snapyr-root:snapyr'
	// ```
	// then, in the consuming project's `build.gradle`:
	// ```
	// implementation project(':snapyr-root:snapyr')
	// ```
	//
	// When working directly in this rep as usual, simply reference the real `rootProject` as before
	snapyrRootProject = project.findProject(":snapyr-root")
	if (snapyrRootProject == null) {
		snapyrRootProject = rootProject
	}
}

// When SDK is included in another project locally, ensures root Snapyr SDK `build.gradle` is processed before continuing. This is needed to ensure Snapyr root dependencies and `ext` values are available by the time this file's tasks run
if (snapyrRootProject != rootProject) {
	evaluationDependsOn(snapyrRootProject.path)
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.getkeepsafe.dexcount'

apply from: snapyrRootProject.file('gradle/android.gradle')

android {
	defaultConfig {
		consumerProguardFiles 'proguard-rules-lib.txt'
		buildConfigField 'String', 'VERSION_NAME', "\"$VERSION_NAME\""
	}
}

dependencies {
	api snapyrRootProject.ext.deps.supportAnnotations
	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

	testImplementation fileTree(dir: 'libs', include: ['*.jar'])
	testImplementation files('libs/objenesis-2.6.jar')

	implementation 'androidx.lifecycle:lifecycle-process:2.2.0'
	implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
	implementation platform('com.google.firebase:firebase-bom:27.1.0')
	implementation 'com.google.firebase:firebase-messaging'

	testImplementation 'junit:junit:4.12'
	testImplementation('org.robolectric:robolectric:3.5') {
		exclude group: 'commons-logging', module: 'commons-logging'
		exclude group: 'org.apache.httpcomponents', module: 'httpclient'
	}
	testImplementation 'com.squareup.assertj:assertj-android:1.1.1'
	testImplementation 'com.squareup.okio:okio:1.14.0'
	testImplementation 'com.squareup.okhttp:mockwebserver:2.7.4'
	testImplementation 'com.squareup.burst:burst-junit4:1.1.1'

	// We're intentionally on assertj 1.7.1 as the latest (3.8.0 as of 22/12/2017) is not compatible
	// with Android.
	//noinspection GradleDependency
	testImplementation 'org.assertj:assertj-core:1.7.1'
	testImplementation group: 'net.bytebuddy', name: 'byte-buddy', version: '1.9.0'
	testImplementation group: 'net.bytebuddy', name: 'byte-buddy-agent', version: '1.9.0'
	testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
	implementation "androidx.core:core-ktx:1.3.1"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

if (snapyrRootProject == rootProject) {
	apply from: snapyrRootProject.file('gradle/mvn-publish.gradle')
} else {
	logger.warn("Snapyr: Skipping mvn-publish.gradle (building from outside of Snapyr directory)")
}

repositories {
	mavenCentral()
}
